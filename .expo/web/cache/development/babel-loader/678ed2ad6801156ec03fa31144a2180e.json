{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/toadtoad/Syncthing/Programming/COVIDForcast/COVIDForecastUI/App.tsx\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { mapping } from \"@eva-design/eva\";\nimport { default as darkTheme } from \"./dark-mapping.json\";\nimport { default as customMapping } from \"./custom-mapping.json\";\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\";\nimport * as Font from \"expo-font\";\nimport { MainScreen } from \"./app/screens/main_screen/main_screen\";\n\nvar theme = _objectSpread({}, darkTheme);\n\nfunction wait(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-Regular\": require(\"./assets/fonts/metropolis/Metropolis-Regular.ttf\")\n              }));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-Medium\": require(\"./assets/fonts/metropolis/Metropolis-Medium.ttf\")\n              }));\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-SemiBold\": require(\"./assets/fonts/metropolis/Metropolis-SemiBold.ttf\")\n              }));\n\n            case 6:\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-Bold\": require(\"./assets/fonts/metropolis/Metropolis-Bold.ttf\")\n              }));\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-ExtraBold\": require(\"./assets/fonts/metropolis/Metropolis-ExtraBold.ttf\")\n              }));\n\n            case 10:\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Metropolis-Black\": require(\"./assets/fonts/metropolis/Metropolis-Black.ttf\")\n              }));\n\n            case 12:\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Manrope: require(\"./assets/fonts/ManropeGX.ttf\")\n              }));\n\n            case 14:\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Inter: require(\"./assets/fonts/Inter.otf\")\n              }));\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"initializeApp\",\n    value: function initializeApp() {\n      return _regeneratorRuntime.async(function initializeApp$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.loadFonts());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.loadFonts());\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(wait(1000));\n\n            case 4:\n              this.forceUpdate();\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, React.createElement(IconRegistry, {\n        icons: EvaIconsPack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }), React.createElement(ApplicationProvider, {\n        mapping: mapping,\n        theme: theme,\n        customMapping: customMapping,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }\n      }, React.createElement(AppNavigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nexport var StackNavigator = createStackNavigator({\n  MainScreen: {\n    screen: MainScreen,\n    navigationOptions: {\n      headerShown: false\n    }\n  }\n});\nexport var AppNavigator = createAppContainer(StackNavigator);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/toadtoad/Syncthing/Programming/COVIDForcast/COVIDForecastUI/App.tsx"],"names":["React","EvaIconsPack","createAppContainer","createStackNavigator","mapping","default","darkTheme","customMapping","ApplicationProvider","IconRegistry","Font","MainScreen","theme","wait","timeout","Promise","resolve","setTimeout","App","loadAsync","require","Manrope","Inter","loadFonts","forceUpdate","Component","StackNavigator","screen","navigationOptions","headerShown","AppNavigator","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SACEC,kBADF,QAIO,kBAJP;AAKA,SAASC,oBAAT,QAAqC,wBAArC;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,OAAO,IAAIC,SAApB;AACA,SAASD,OAAO,IAAIE,aAApB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAASC,UAAT;;AAEA,IAAMC,KAAK,qBAAQN,SAAR,CAAX;;AAEA,SAASO,IAAT,CAAcC,OAAd,EAA+B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAV;AACD,GAFM,CAAP;AAGD;;IAEoBI,G;;;;;;;;;;;;;;;;;;;+CAEXR,IAAI,CAACS,SAAL,CAAe;AACnB,sCAAsBC,OAAO;AADV,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnB,qCAAqBC,OAAO;AADT,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnB,uCAAuBC,OAAO;AADX,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnB,mCAAmBC,OAAO;AADP,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnB,wCAAwBC,OAAO;AADZ,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnB,oCAAoBC,OAAO;AADR,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnBE,gBAAAA,OAAO,EAAED,OAAO;AADG,eAAf,C;;;;+CAGAV,IAAI,CAACS,SAAL,CAAe;AACnBG,gBAAAA,KAAK,EAAEF,OAAO;AADK,eAAf,C;;;;;;;;;;;;;;;;;+CAMA,KAAKG,SAAL,E;;;;;;;;;;;;;;;;;+CAIA,KAAKA,SAAL,E;;;;+CACAV,IAAI,CAAC,IAAD,C;;;AACV,mBAAKW,WAAL;;;;;;;;;;;6BAGK;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEvB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,mBAAD;AACE,QAAA,OAAO,EAAEG,OADX;AAEE,QAAA,KAAK,EAAEQ,KAFT;AAGE,QAAA,aAAa,EAAEL,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAFF,CADF;AAYD;;;;EAnDgCP,KAAK,CAACyB,S;;SAAlBP,G;AAsDrB,OAAO,IAAMQ,cAAc,GAAGvB,oBAAoB,CAAC;AACjDQ,EAAAA,UAAU,EAAE;AACVgB,IAAAA,MAAM,EAAEhB,UADE;AAEViB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,WAAW,EAAE;AADI;AAFT;AADqC,CAAD,CAA3C;AASP,OAAO,IAAMC,YAAY,GAAG5B,kBAAkB,CAACwB,cAAD,CAAvC;AAEP,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\";\nimport {\n  createAppContainer,\n  SafeAreaView,\n  ThemeContext,\n} from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport { default as appTheme } from \"./custom-theme.json\";\nimport { mapping } from \"@eva-design/eva\";\nimport { light as lightTheme } from \"@eva-design/eva\";\nimport { default as darkTheme } from \"./dark-mapping.json\";\nimport { default as customMapping } from \"./custom-mapping.json\";\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\";\nimport * as Font from \"expo-font\";\n\nimport { MainScreen } from \"./app/screens/main_screen/main_screen\";\n\nconst theme = { ...darkTheme };\n\nfunction wait(timeout: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n\nexport default class App extends React.Component {\n  async loadFonts() {\n    await Font.loadAsync({\n      \"Metropolis-Regular\": require(\"./assets/fonts/metropolis/Metropolis-Regular.ttf\")\n    });\n    await Font.loadAsync({\n      \"Metropolis-Medium\": require(\"./assets/fonts/metropolis/Metropolis-Medium.ttf\")\n    });\n    await Font.loadAsync({\n      \"Metropolis-SemiBold\": require(\"./assets/fonts/metropolis/Metropolis-SemiBold.ttf\")\n    });\n    await Font.loadAsync({\n      \"Metropolis-Bold\": require(\"./assets/fonts/metropolis/Metropolis-Bold.ttf\")\n    });\n    await Font.loadAsync({\n      \"Metropolis-ExtraBold\": require(\"./assets/fonts/metropolis/Metropolis-ExtraBold.ttf\")\n    });\n    await Font.loadAsync({\n      \"Metropolis-Black\": require(\"./assets/fonts/metropolis/Metropolis-Black.ttf\")\n    });\n    await Font.loadAsync({\n      Manrope: require(\"./assets/fonts/ManropeGX.ttf\")\n    });\n    await Font.loadAsync({\n      Inter: require(\"./assets/fonts/Inter.otf\")\n    });\n  }\n\n  async initializeApp() {\n    await this.loadFonts();\n  }\n\n  async componentDidMount() {\n    await this.loadFonts();\n    await wait(1000);\n    this.forceUpdate();\n  }\n\nrender() {\n  return (\n    <React.Fragment>\n      <IconRegistry icons={EvaIconsPack} />\n      <ApplicationProvider\n        mapping={mapping}\n        theme={theme}\n        customMapping={customMapping}\n      >\n        <AppNavigator />\n      </ApplicationProvider>\n    </React.Fragment>\n  );\n}\n}\n\nexport const StackNavigator = createStackNavigator({\n  MainScreen: {\n    screen: MainScreen,\n    navigationOptions: {\n      headerShown: false,\n    },\n  },\n});\n\nexport const AppNavigator = createAppContainer(StackNavigator);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}